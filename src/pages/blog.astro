---
import type { MarkdownInstance } from 'astro'
import type { Frontmatter } from '../config'
import { SiteMetadata } from '../config'
import Base from '../layouts/base.astro'
import PageHero from '../components/pagehero.astro'
import BlogRoll from '../components/blogroll.astro'

const frontmatter = {
  title: 'Blog',
  description: 'Articles published from time to time',
  coverSVG: '../svg/undraw/undraw_my_feed.svg',
  socialImage: '/images/undraw/undraw_my_feed.png',
  publishDate: SiteMetadata.buildTime,
}

const allPosts = (await Astro.glob(
  './blog/*.{md,mdx}'
)) as MarkdownInstance<Frontmatter>[]
const posts = allPosts
  .sort(
    (a, b) =>
      new Date(b.frontmatter.publishDate).valueOf() -
      new Date(a.frontmatter.publishDate).valueOf()
  )
  .filter(post => !post.frontmatter.draft)

// console.log(posts)
// posts.map(post => console.log(post.frontmatter))
---

<Base frontmatter={frontmatter}>
  <header>
    <PageHero
      title={frontmatter.title}
      description={frontmatter.description}
      coverSVG={frontmatter.coverSVG}
      socialImage={frontmatter.socialImage}
    />
  </header>
  <main class="mt-10 bg-gray-100">
    <BlogRoll posts={posts} />
  </main>
</Base>
